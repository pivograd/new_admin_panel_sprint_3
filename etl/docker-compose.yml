version: '3.8'
services:
  django:
    container_name: django
    build: app
    expose:
      - "8000"
    depends_on:
      - postgres
    env_file:
      - ./app/example/.env
    volumes:
      - static_volumes:/opt/app/static

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - $HOME/postgresql/data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - static_volumes:/opt/app/static
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - ./data:/data/:ro
    depends_on:
      - django
    ports:
      - "80:80"

  elasticsearch:
    image: elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/var/lib/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 10s
      timeout: 5s
      retries: 5

  etl:
    container_name: etl
    build:
      context: ./postgres_to_es
    depends_on:
      - elasticsearch
      - postgres

volumes:
  static_volumes:
  elasticsearch_data:
